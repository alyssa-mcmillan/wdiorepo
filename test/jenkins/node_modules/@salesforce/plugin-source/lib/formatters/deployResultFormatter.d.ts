import { UX } from '@salesforce/command';
import { Logger } from '@salesforce/core';
import { DeployResult } from '@salesforce/source-deploy-retrieve';
import { FileResponse, MetadataApiDeployStatus, RequestStatus } from '@salesforce/source-deploy-retrieve/lib/src/client/types';
import { ResultFormatter, ResultFormatterOptions } from './resultFormatter';
export interface DeployCommandResult extends MetadataApiDeployStatus {
    deployedSource: FileResponse[];
    outboundFiles: string[];
    deploys: MetadataApiDeployStatus[];
}
export declare class DeployResultFormatter extends ResultFormatter {
    protected result: DeployResult;
    protected fileResponses: FileResponse[];
    constructor(logger: Logger, ux: UX, options: ResultFormatterOptions, result: DeployResult);
    /**
     * Get the JSON output from the DeployResult.
     *
     * @returns a JSON formatted result matching the provided type.
     */
    getJson(): DeployCommandResult;
    /**
     * Displays deploy results in human readable format.  Output can vary based on:
     *
     * 1. Verbose option
     * 3. Checkonly deploy (checkonly=true)
     * 4. Deploy with test results
     * 5. Canceled status
     */
    display(): void;
    protected hasStatus(status: RequestStatus): boolean;
    protected isRunTestsEnabled(): boolean;
    protected isCheckOnly(): boolean;
    protected getNumResult(field: string): number;
    protected getResponse(): MetadataApiDeployStatus;
    protected displaySuccesses(): void;
    protected displayFailures(): void;
    protected displayTestResults(): void;
    protected verboseTestFailures(): void;
    protected verboseTestSuccess(): void;
    protected verboseTestTime(): void;
}
