"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@salesforce/command");
const packAndSign_1 = require("../../../codeSigning/packAndSign");
// noinspection JSUnusedGlobalSymbols
/**
 * Help message for the command.
 * Help doesn't currently work for builtin commands this is here in case it ever does.
 */
// Required Parameters:
// --publickeyurl - the url where the public key/certificate will be hosted.
// Returns:
// SHA1 fingerprint for the provided url
// Usage:
// sfdx plugins:trust:fingerprint --publicKeyUrl http://foo.salesforce.internal.com/file/location/sfdx.cert
class Fingerprint extends command_1.SfdxCommand {
    async run() {
        const response = await packAndSign_1.api.retrieveFingerprint(this.flags.publickeyurl);
        this.ux.log(response.fingerprint);
        return response;
    }
}
exports.Fingerprint = Fingerprint;
Fingerprint.description = 'Get the SHA1 fingerprint for the provided url';
Fingerprint.examples = [
    '$ sfdx plugins:trust:fingerprint --publicKeyUrl https://developer.salesforce.com/media/salesforce-cli/sfdx.cer'
];
Fingerprint.hidden = true;
Fingerprint.flagsConfig = {
    publickeyurl: command_1.flags.string({
        char: 'p',
        required: true,
        description: 'the url where the public key/certificate will be hosted.'
    })
};
// Comment this out if your command does not require an org username
Fingerprint.requiresUsername = false;
// Comment this out if your command does not support a hub org username
Fingerprint.supportsDevhubUsername = false;
// Set this to true if your command requires a project workspace; 'requiresProject' is false by default
Fingerprint.requiresProject = false;
//# sourceMappingURL=fingerprint.js.map